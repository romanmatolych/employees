{"version":3,"sources":["containers/employees/employees.module.css","components/letter-section/letter-section.module.css","components/month-group/month-group.module.css","components/user/user.module.css","containers/employees-birthday/employees-birthday.module.css","store/actions/users.js","store/reducers/users.js","store/reducers/index.js","store/index.js","constants/index.js","components/user/user.jsx","components/letter-section/letter-section.jsx","containers/employees/employees.jsx","components/month-group/month-group.jsx","containers/employees-birthday/employees-birthday.jsx","utils/employees-birthday-utils.js","index.js"],"names":["module","exports","LOAD_USERS_REQUEST","LOAD_USERS_SUCCESS","LOAD_USERS_FAILURE","USER_TRIGGER","getInitialState","selectedIds","localStorage","getItem","JSON","parse","_","error","loading","byId","allIds","userReducer","state","action","type","normalized","payload","reduce","acc","curr","id","Object","keys","reducer","combineReducers","users","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ALPHABET","split","MONTH_NAMES","User","user","onChange","className","styles","lastName","firstName","e","checked","LetterSection","letter","onUserCheck","length","sort","a","b","localeCompare","map","mapDispatch","loadUsers","dispatch","fetch","response","ok","Error","json","data","triggerUser","userId","getState","filter","currId","setItem","stringify","connect","isLoading","selectedUserIds","useEffect","prepareUserList","slice","toLowerCase","startsWith","includes","userCheckedHandler","target","content","message","formatUserDOB","dateString","date","Date","getDate","getMonth","getFullYear","MonthGroup","monthName","dob","selectedUsers","usersGroupedByMonth","index","birthdayGuys","emp","monthGroups","entries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41b018d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alphabetMenu\":\"employees_alphabetMenu__2fkDl\",\"employees\":\"employees_employees__U33kk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letterSection\":\"letter-section_letterSection__3xXyB\",\"header\":\"letter-section_header__1y2R6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"month-group_header__1WAyj\",\"monthGroup\":\"month-group_monthGroup__2jWzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullName\":\"user_fullName__2tbOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesBirthday\":\"employees-birthday_employeesBirthday__HpL3Q\"};","export const LOAD_USERS_REQUEST = 'LOAD_USERS_REQUEST';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const LOAD_USERS_FAILURE = 'LOAD_USERS_FAILURE';\r\nexport const USER_TRIGGER = 'USER_TRIGGER';\r\n\r\nconst API_BASE_URL = 'https://yalantis-react-school-api.yalantis.com/api/task0';\r\n\r\nexport const loadUsers = () => async dispatch => {\r\n  dispatch({ type: LOAD_USERS_REQUEST });\r\n  const response = await fetch(`${API_BASE_URL}/users`);\r\n  try {\r\n    if (!response.ok) {\r\n      throw new Error('Bad request');\r\n    }\r\n    const data = await response.json();\r\n    dispatch({ type: LOAD_USERS_SUCCESS, payload: data });\r\n  } catch (e) {\r\n    dispatch({ type: LOAD_USERS_FAILURE, error: e });\r\n  }\r\n};\r\n\r\nexport const triggerUser = (userId, checked) => (dispatch, getState) => {\r\n  const { users } = getState();\r\n  const selectedIds = checked\r\n    ? [...users.selectedIds, userId]\r\n    : users.selectedIds.filter((currId) => currId !== userId);\r\n\r\n  localStorage.setItem('selectedUserIds', JSON.stringify(selectedIds));\r\n\r\n  dispatch({ type: USER_TRIGGER, payload: selectedIds });\r\n};\r\n","import {\r\n  LOAD_USERS_REQUEST,\r\n  LOAD_USERS_SUCCESS,\r\n  LOAD_USERS_FAILURE,\r\n  USER_TRIGGER,\r\n} from '../actions';\r\n\r\nconst getInitialState = () => {\r\n  let selectedIds = localStorage.getItem('selectedUserIds');\r\n  try {\r\n    selectedIds = selectedIds ? JSON.parse(selectedIds) : [];\r\n  } catch (_) {\r\n    selectedIds = [];\r\n  }\r\n\r\n  return {\r\n    error: null,\r\n    loading: false,\r\n    byId: {},\r\n    allIds: [],\r\n    selectedIds,\r\n  };\r\n};\r\n\r\nconst userReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case LOAD_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case LOAD_USERS_SUCCESS:\r\n      const normalized = action.payload.reduce((acc, curr) => {\r\n        acc[curr.id] = curr;\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        byId: normalized,\r\n        allIds: Object.keys(normalized),\r\n      };\r\n    case LOAD_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    case USER_TRIGGER:\r\n      return {\r\n        ...state,\r\n        selectedIds: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport users from './users';\r\n\r\nconst reducer = combineReducers({\r\n  users,\r\n});\r\n\r\nexport default reducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","export const ALPHABET = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\nexport const MONTH_NAMES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n","import React from 'react';\r\n\r\nimport * as styles from './user.module.css';\r\n\r\nconst User = ({ user, onChange }) => (\r\n  <div>\r\n    <span className={styles.fullName}>{user.lastName} {user.firstName}</span>\r\n    <input type=\"checkbox\" onChange={(e) => onChange(user.id, e)} checked={user.checked} />\r\n  </div>\r\n);\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nimport * as styles from './letter-section.module.css';\r\nimport User from '../user/user';\r\n\r\nconst LetterSection = ({ letter, users, onUserCheck }) => (\r\n  <div className={styles.letterSection}>\r\n    <div className={styles.header}>{letter}</div>\r\n    {users.length\r\n      ? users\r\n        .sort((a, b) => a.lastName.localeCompare(b.lastName))\r\n        .map(user => <User key={user.id} user={user} onChange={onUserCheck} />)\r\n      : '—'}\r\n  </div>\r\n);\r\n\r\nexport default LetterSection;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadUsers, triggerUser } from '../../store/actions';\r\nimport * as styles from './employees.module.css';\r\nimport { ALPHABET } from '../../constants';\r\nimport LetterSection from '../../components/letter-section/letter-section';\r\n\r\nconst Employees = ({ users, loadUsers, triggerUser, isLoading, selectedUserIds, error }) => {\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, [loadUsers]);\r\n\r\n  const prepareUserList = letter => users\r\n    .slice()\r\n    .filter(({ lastName }) => lastName.toLowerCase().startsWith(letter))\r\n    .map((user) => {\r\n      user.checked = selectedUserIds.includes(user.id);\r\n      return user;\r\n    });\r\n  const userCheckedHandler = (id, e) => triggerUser(id, e.target.checked);\r\n\r\n  let content = null;\r\n\r\n  if (error) {\r\n    content = `Error: ${error.message}`;\r\n  } else if (isLoading) {\r\n    content = 'Loading...';\r\n  } else {\r\n    content = ALPHABET.map((letter) => (\r\n      <LetterSection\r\n        key={letter}\r\n        letter={letter}\r\n        users={prepareUserList(letter)}\r\n        onUserCheck={userCheckedHandler}\r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.employees}>\r\n      <div className=\"header\">Employees</div>\r\n      <div className={styles.alphabetMenu}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = ({ users: { byId, allIds, loading, error, selectedIds } }) => ({\r\n  users: allIds.map((id) => byId[id]),\r\n  isLoading: loading,\r\n  error,\r\n  selectedUserIds: selectedIds,\r\n});\r\n\r\nconst mapDispatch = {\r\n  loadUsers,\r\n  triggerUser,\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Employees);\r\n","import React from 'react';\r\n\r\nimport { MONTH_NAMES } from '../../constants';\r\nimport * as styles from './month-group.module.css';\r\n\r\nconst MonthGroup = ({ monthName, users }) => {\r\n  return (\r\n    <div className={styles.monthGroup}>\r\n      <div className={styles.header}>{monthName}</div>\r\n      <ul>\r\n        {users\r\n          .sort((a, b) => Date.parse(a.dob) - Date.parse(b.dob))\r\n          .map(user => <li key={user.id}>{user.lastName} {user.firstName} - {formatUserDOB(user.dob)}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formatUserDOB = dateString => {\r\n  const date = new Date(dateString);\r\n  return `${date.getDate()} ${MONTH_NAMES[date.getMonth()]}, ${date.getFullYear()} year`;\r\n}\r\n\r\nexport default MonthGroup;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MonthGroup from '../../components/month-group/month-group';\r\nimport { groupUsersByBirthdayMonths } from '../../utils';\r\nimport * as styles from './employees-birthday.module.css';\r\n\r\nconst EmployeesBirthday = ({ selectedUsers }) => {\r\n  const usersGroupedByMonth = groupUsersByBirthdayMonths(selectedUsers);\r\n\r\n  const monthGroups = Object.entries(usersGroupedByMonth).map(([monthName, users]) =>\r\n    users.length ? <MonthGroup key={monthName} monthName={monthName} users={users.slice()} /> : null,\r\n  );\r\n\r\n  return (\r\n    <div className={styles.employeesBirthday}>\r\n      <div className=\"header\">Employees birthday</div>\r\n      {selectedUsers.length\r\n        ? monthGroups\r\n        : 'No selected employees'}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = ({ users: { byId, selectedIds } }) => ({\r\n  selectedUsers: selectedIds.map((id) => byId[id]).filter((user) => !!user),\r\n});\r\n\r\nexport default connect(mapState)(EmployeesBirthday);\r\n","import { MONTH_NAMES } from '../constants';\r\n\r\nexport const groupUsersByBirthdayMonths = users =>\r\n    MONTH_NAMES.reduce((acc, curr, index) => {\r\n        const birthdayGuys = users.filter((emp) => new Date(emp.dob).getMonth() === index);\r\n        acc[curr] = birthdayGuys;\r\n        return acc;\r\n    }, {});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport store from './store';\nimport Employees from './containers/employees/employees';\nimport EmployeesBirthday from './containers/employees-birthday/employees-birthday';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <div className=\"container\">\n        <Employees />\n        <EmployeesBirthday />\n      </div>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}