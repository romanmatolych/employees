{"version":3,"sources":["containers/employees/employees.module.css","components/letter-section/letter-section.module.css","components/month-group/month-group.module.css","components/user/user.module.css","containers/employees-birthday/employees-birthday.module.css","store/actions/users.js","store/reducers/users.js","store/reducers/index.js","store/index.js","constants/index.js","components/user/user.jsx","components/letter-section/letter-section.jsx","containers/employees/employees.jsx","utils/users-utils.js","components/month-group/month-group.jsx","containers/employees-birthday/employees-birthday.jsx","index.js"],"names":["module","exports","LOAD_USERS_REQUEST","LOAD_USERS_SUCCESS","LOAD_USERS_FAILURE","USER_TRIGGER","getInitialState","selectedIds","localStorage","getItem","JSON","parse","_","error","loading","byId","allIds","userReducer","state","action","type","normalized","payload","reduce","acc","curr","id","Object","keys","reducer","combineReducers","users","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ALPHABET","split","MONTH_NAMES","User","user","onChange","lastName","firstName","checked","className","styles","e","LetterSection","letter","onUserCheck","userList","slice","sort","firstUser","secondUser","localeCompare","map","length","mapDispatch","loadUsers","dispatch","a","fetch","response","ok","Error","json","data","triggerUser","userId","getState","filter","currId","setItem","stringify","connect","isLoading","selectedUserIds","useEffect","prepareUserList","toLowerCase","startsWith","includes","userCheckedHandler","target","message","formatUsersDOB","dateString","date","Date","getUTCDate","getUTCMonth","getUTCFullYear","MonthGroup","monthName","dob","selectedUsers","usersGroupedByMonth","index","birthdayGuys","monthGroups","entries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76696498.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alphabetMenu\":\"employees_alphabetMenu__2fkDl\",\"employees\":\"employees_employees__U33kk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letterSection\":\"letter-section_letterSection__3xXyB\",\"header\":\"letter-section_header__1y2R6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"month-group_header__1WAyj\",\"monthGroup\":\"month-group_monthGroup__2jWzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullName\":\"user_fullName__2tbOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesBirthday\":\"employees-birthday_employeesBirthday__HpL3Q\"};","export const LOAD_USERS_REQUEST = 'LOAD_USERS_REQUEST';\r\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\r\nexport const LOAD_USERS_FAILURE = 'LOAD_USERS_FAILURE';\r\nexport const USER_TRIGGER = 'USER_TRIGGER';\r\n\r\nconst API_BASE_URL = 'https://yalantis-react-school-api.yalantis.com/api/task0';\r\n\r\nexport const loadUsers = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_USERS_REQUEST });\r\n  const response = await fetch(`${API_BASE_URL}/users`);\r\n  try {\r\n    if (!response.ok) {\r\n      throw new Error('Bad request');\r\n    }\r\n    const data = await response.json();\r\n    dispatch({ type: LOAD_USERS_SUCCESS, payload: data });\r\n  } catch (e) {\r\n    dispatch({ type: LOAD_USERS_FAILURE, error: e });\r\n  }\r\n};\r\n\r\nexport const triggerUser = (userId, checked) => (dispatch, getState) => {\r\n  const { users } = getState();\r\n  const selectedIds = checked\r\n    ? [...users.selectedIds, userId]\r\n    : users.selectedIds.filter((currId) => currId !== userId);\r\n\r\n  localStorage.setItem('selectedUserIds', JSON.stringify(selectedIds));\r\n\r\n  dispatch({ type: USER_TRIGGER, payload: selectedIds });\r\n};\r\n","import {\r\n  LOAD_USERS_REQUEST,\r\n  LOAD_USERS_SUCCESS,\r\n  LOAD_USERS_FAILURE,\r\n  USER_TRIGGER,\r\n} from '../actions';\r\n\r\nconst getInitialState = () => {\r\n  let selectedIds = localStorage.getItem('selectedUserIds');\r\n  try {\r\n    selectedIds = selectedIds ? JSON.parse(selectedIds) : [];\r\n  } catch (_) {\r\n    selectedIds = [];\r\n  }\r\n\r\n  return {\r\n    error: null,\r\n    loading: false,\r\n    byId: {},\r\n    allIds: [],\r\n    selectedIds,\r\n  };\r\n};\r\n\r\nconst userReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case LOAD_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case LOAD_USERS_SUCCESS:\r\n      const normalized = action.payload.reduce((acc, curr) => {\r\n        acc[curr.id] = curr;\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        byId: normalized,\r\n        allIds: Object.keys(normalized),\r\n      };\r\n    case LOAD_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    case USER_TRIGGER:\r\n      return {\r\n        ...state,\r\n        selectedIds: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport users from './users';\r\n\r\nconst reducer = combineReducers({\r\n  users,\r\n});\r\n\r\nexport default reducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","export const ALPHABET = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\nexport const MONTH_NAMES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n","import React from 'react';\r\n\r\nimport * as styles from './user.module.css';\r\n\r\nconst User = ({ user, onChange }) => {\r\n  const { lastName, firstName, id, checked } = user;\r\n  const changeHandler = (e) => onChange(id, e);\r\n\r\n  return (\r\n    <div>\r\n      <span className={styles.fullName}>\r\n        {lastName} {firstName}\r\n      </span>\r\n      <input type=\"checkbox\" onChange={changeHandler} checked={checked} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nimport * as styles from './letter-section.module.css';\r\nimport User from '../user/user';\r\n\r\nconst LetterSection = ({ letter, users, onUserCheck }) => {\r\n  const userList = users\r\n    .slice()\r\n    .sort((firstUser, secondUser) => firstUser.lastName.localeCompare(secondUser.lastName))\r\n    .map((user) => <User key={user.id} user={user} onChange={onUserCheck} />);\r\n\r\n  return (\r\n    <div className={styles.letterSection}>\r\n      <div className={styles.header}>{letter}</div>\r\n      {userList.length ? userList : '—'}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterSection;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadUsers, triggerUser } from '../../store/actions';\r\nimport * as styles from './employees.module.css';\r\nimport { ALPHABET } from '../../constants';\r\nimport LetterSection from '../../components/letter-section/letter-section';\r\n\r\nconst Employees = ({ users, loadUsers, triggerUser, isLoading, selectedUserIds, error }) => {\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, [loadUsers]);\r\n\r\n  const prepareUserList = (letter) =>\r\n    users\r\n      .filter(({ lastName }) => lastName.toLowerCase().startsWith(letter))\r\n      .map((user) => ({\r\n        ...user,\r\n        checked: selectedUserIds.includes(user.id),\r\n      }));\r\n\r\n  const userCheckedHandler = (id, e) => triggerUser(id, e.target.checked);\r\n\r\n  const getMenuContent = () => {\r\n    if (error) {\r\n      return `Error: ${error.message}`;\r\n    }\r\n\r\n    return isLoading\r\n      ? 'Loading...'\r\n      : ALPHABET.map((letter) => (\r\n          <LetterSection\r\n            key={letter}\r\n            letter={letter}\r\n            users={prepareUserList(letter)}\r\n            onUserCheck={userCheckedHandler}\r\n          />\r\n        ));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.employees}>\r\n      <div className=\"header\">Employees</div>\r\n      <div className={styles.alphabetMenu}>{getMenuContent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = ({ users: { byId, allIds, loading, error, selectedIds } }) => ({\r\n  users: allIds.map((id) => byId[id]),\r\n  isLoading: loading,\r\n  error,\r\n  selectedUserIds: selectedIds,\r\n});\r\n\r\nconst mapDispatch = {\r\n  loadUsers,\r\n  triggerUser,\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Employees);\r\n","import { MONTH_NAMES } from '../constants';\r\n\r\n/**\r\n * Returns an aggregated object of users by the names of their birthday month\r\n * @param {Object[]} users\r\n */\r\nexport const groupUsersByBirthdayMonths = (users) =>\r\n  MONTH_NAMES.reduce((acc, curr, index) => {\r\n    const birthdayGuys = users.filter((user) => new Date(user.dob).getUTCMonth() === index);\r\n    acc[curr] = birthdayGuys;\r\n    return acc;\r\n  }, {});\r\n\r\n/**\r\n * Returns formatted date string. Example: '30 September, 2019 year'\r\n * @param {string} dateString UTC datetime\r\n */\r\nexport const formatUsersDOB = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return `${date.getUTCDate()} ${MONTH_NAMES[date.getUTCMonth()]}, ${date.getUTCFullYear()} year`;\r\n};\r\n","import React from 'react';\r\n\r\nimport { formatUsersDOB } from '../../utils/users-utils';\r\nimport * as styles from './month-group.module.css';\r\n\r\nconst MonthGroup = ({ monthName, users }) => {\r\n  const userList = users\r\n    .slice()\r\n    // ascending sorting by the date of the birthday in the current month\r\n    .sort((firstUser, secondUser) => Date.parse(firstUser.dob) - Date.parse(secondUser.dob))\r\n    .map(({ id, lastName, firstName, dob }) => (\r\n      <li key={id}>\r\n        {lastName} {firstName} - {formatUsersDOB(dob)}\r\n      </li>\r\n    ));\r\n\r\n  return (\r\n    <div className={styles.monthGroup}>\r\n      <div className={styles.header}>{monthName}</div>\r\n      <ul>{userList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthGroup;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MonthGroup from '../../components/month-group/month-group';\r\nimport { groupUsersByBirthdayMonths } from '../../utils';\r\nimport * as styles from './employees-birthday.module.css';\r\n\r\nconst EmployeesBirthday = ({ selectedUsers }) => {\r\n  const usersGroupedByMonth = groupUsersByBirthdayMonths(selectedUsers);\r\n\r\n  const monthGroups = Object.entries(usersGroupedByMonth)\r\n    // do not show a month without selected employees\r\n    .filter(([, users]) => users.length)\r\n    .map(([monthName, users]) => (\r\n      <MonthGroup key={monthName} monthName={monthName} users={users} />\r\n    ));\r\n\r\n  return (\r\n    <div className={styles.employeesBirthday}>\r\n      <div className=\"header\">Employees birthday</div>\r\n      {selectedUsers.length ? monthGroups : 'No selected employees'}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = ({ users: { byId, selectedIds } }) => ({\r\n  selectedUsers: selectedIds.map((id) => byId[id]).filter((user) => !!user),\r\n});\r\n\r\nexport default connect(mapState)(EmployeesBirthday);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport store from './store';\nimport Employees from './containers/employees/employees';\nimport EmployeesBirthday from './containers/employees-birthday/employees-birthday';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <div className=\"container\">\n        <Employees />\n        <EmployeesBirthday />\n      </div>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}